# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# When manually running the pipeline, you can select whether it
# succeeds or fails.
parameters:
- name: succeed
  displayName: Succeed or fail
  type: boolean
  default: false

trigger:
- master

pool: Default 

stages:
- stage: JavaPackage
  displayName: 'Build Java and Code Coverage Stage' # in case of failure created issue in azure board
  jobs:
  - job: JavaPackage 
    steps:
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'
          
      # task to publish code coverage results
      - task: PublishCodeCoverageResults@2
        inputs:
          codeCoverageTool: "JaCoCo"
          summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
          reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
          failIfCoverageEmpty: true

  - job: Work
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    # This malformed command causes the job to fail
    # Only run this command if the succeed variable is set to false
    - script: git clone malformed input
      condition: eq(${{ parameters.succeed }}, true) # changed to "true" in order to avoid creating work item in case of failure

  # This job creates a work item, and only runs if the previous job failed
  - job: ErrorHandler
    dependsOn: Work
    condition: failed()
    steps: 
    - bash: |
        az boards work-item create \
          --title "Build $(build.buildNumber) failed" \
          --type issue \
          --org $(System.TeamFoundationCollectionUri) \
          --project $(System.TeamProject)
      env: 
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: 'Create work item on failure'

- stage: Build
  displayName: 'Build Stage sample'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - script: |
        echo "Restoring project dependencies..."
      displayName: 'Restore dependencies'
    - script: |
        echo "Running unit tests..."
      displayName: 'Run unit tests'

- stage: Test
  displayName: 'Test Stage sample'
  dependsOn: Build
  isSkippable: false
  jobs:
  - job: TestJob
    displayName: 'Test Job'
    steps:
    - script: |
        echo "Running unit tests..."
      displayName: 'Run unit tests'

- stage: DeployToStaging
  displayName: 'Deploy to Staging'
  dependsOn: Test
  jobs:
  - job: DeployStagingJob
    displayName: 'Deploy to Staging Job'
    pool: Default 
      # vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Build staging job..."
      displayName: 'Build and deploy to staging'

  - job: DeployStagingJobWithValidation
    pool: server 
    timeoutInMinutes: 4320 # job times out in 3 days
    displayName: 'Deploy to Staging Job'
    steps:
    - task: ManualValidation@1
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: 'wassay75@hotmail.com'
        instructions: 'Please validate the stage configuration and resume'
        onTimeout: 'resume'